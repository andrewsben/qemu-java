package org.anarres.qemu.qapi.api;

import com.google.gson.annotations.SerializedName;
import java.util.List;
import java.util.Map;
import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import org.anarres.qemu.qapi.common.*;

/**
 * Autogenerated class.
 *
 * <p><pre>QApiTypeDescriptor{name=ImageInfo, data={filename=str, format=str, *dirty-flag=bool, *actual-size=int, virtual-size=int, *cluster-size=int, *encrypted=bool, *compressed=bool, *backing-filename=str, *full-backing-filename=str, *backing-filename-format=str, *snapshots=[SnapshotInfo], *backing-image=ImageInfo, *format-specific=ImageInfoSpecific}, innerTypes=null}</pre></p>
 */
// QApiTypeDescriptor{name=ImageInfo, data={filename=str, format=str, *dirty-flag=bool, *actual-size=int, virtual-size=int, *cluster-size=int, *encrypted=bool, *compressed=bool, *backing-filename=str, *full-backing-filename=str, *backing-filename-format=str, *snapshots=[SnapshotInfo], *backing-image=ImageInfo, *format-specific=ImageInfoSpecific}, innerTypes=null}
public class ImageInfo extends QApiType {

	@SerializedName("filename")
	@Nonnull
	public java.lang.String filename;
	@SerializedName("format")
	@Nonnull
	public java.lang.String format;
	@SerializedName("dirty-flag")
	@CheckForNull
	public boolean dirtyFlag;
	@SerializedName("actual-size")
	@CheckForNull
	public long actualSize;
	@SerializedName("virtual-size")
	@Nonnull
	public long virtualSize;
	@SerializedName("cluster-size")
	@CheckForNull
	public long clusterSize;
	@SerializedName("encrypted")
	@CheckForNull
	public boolean encrypted;
	@SerializedName("compressed")
	@CheckForNull
	public boolean compressed;
	@SerializedName("backing-filename")
	@CheckForNull
	public java.lang.String backingFilename;
	@SerializedName("full-backing-filename")
	@CheckForNull
	public java.lang.String fullBackingFilename;
	@SerializedName("backing-filename-format")
	@CheckForNull
	public java.lang.String backingFilenameFormat;
	@SerializedName("snapshots")
	@CheckForNull
	public List<SnapshotInfo> snapshots;
	@SerializedName("backing-image")
	@CheckForNull
	public ImageInfo backingImage;
	@SerializedName("format-specific")
	@CheckForNull
	public ImageInfoSpecific formatSpecific;

	public ImageInfo() {
	}

	public ImageInfo(java.lang.String filename, java.lang.String format, boolean dirtyFlag, long actualSize, long virtualSize, long clusterSize, boolean encrypted, boolean compressed, java.lang.String backingFilename, java.lang.String fullBackingFilename, java.lang.String backingFilenameFormat, List<SnapshotInfo> snapshots, ImageInfo backingImage, ImageInfoSpecific formatSpecific) {
		this.filename = filename;
		this.format = format;
		this.dirtyFlag = dirtyFlag;
		this.actualSize = actualSize;
		this.virtualSize = virtualSize;
		this.clusterSize = clusterSize;
		this.encrypted = encrypted;
		this.compressed = compressed;
		this.backingFilename = backingFilename;
		this.fullBackingFilename = fullBackingFilename;
		this.backingFilenameFormat = backingFilenameFormat;
		this.snapshots = snapshots;
		this.backingImage = backingImage;
		this.formatSpecific = formatSpecific;
	}
}
