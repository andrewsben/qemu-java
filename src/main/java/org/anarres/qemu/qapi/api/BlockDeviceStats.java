package org.anarres.qemu.qapi.api;

import com.google.gson.annotations.SerializedName;
import java.util.List;
import java.util.Map;
import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import org.anarres.qemu.qapi.common.*;

/**
 * Autogenerated class.
 *
 * <p><pre>QApiTypeDescriptor{name=BlockDeviceStats, data={rd_bytes=int, wr_bytes=int, rd_operations=int, wr_operations=int, flush_operations=int, flush_total_time_ns=int, wr_total_time_ns=int, rd_total_time_ns=int, wr_highest_offset=int}, innerTypes=null}</pre></p>
 */
// QApiTypeDescriptor{name=BlockDeviceStats, data={rd_bytes=int, wr_bytes=int, rd_operations=int, wr_operations=int, flush_operations=int, flush_total_time_ns=int, wr_total_time_ns=int, rd_total_time_ns=int, wr_highest_offset=int}, innerTypes=null}
public class BlockDeviceStats extends QApiType {

	@SerializedName("rd_bytes")
	@Nonnull
	public long rdBytes;
	@SerializedName("wr_bytes")
	@Nonnull
	public long wrBytes;
	@SerializedName("rd_operations")
	@Nonnull
	public long rdOperations;
	@SerializedName("wr_operations")
	@Nonnull
	public long wrOperations;
	@SerializedName("flush_operations")
	@Nonnull
	public long flushOperations;
	@SerializedName("flush_total_time_ns")
	@Nonnull
	public long flushTotalTimeNs;
	@SerializedName("wr_total_time_ns")
	@Nonnull
	public long wrTotalTimeNs;
	@SerializedName("rd_total_time_ns")
	@Nonnull
	public long rdTotalTimeNs;
	@SerializedName("wr_highest_offset")
	@Nonnull
	public long wrHighestOffset;

	public BlockDeviceStats() {
	}

	public BlockDeviceStats(long rdBytes, long wrBytes, long rdOperations, long wrOperations, long flushOperations, long flushTotalTimeNs, long wrTotalTimeNs, long rdTotalTimeNs, long wrHighestOffset) {
		this.rdBytes = rdBytes;
		this.wrBytes = wrBytes;
		this.rdOperations = rdOperations;
		this.wrOperations = wrOperations;
		this.flushOperations = flushOperations;
		this.flushTotalTimeNs = flushTotalTimeNs;
		this.wrTotalTimeNs = wrTotalTimeNs;
		this.rdTotalTimeNs = rdTotalTimeNs;
		this.wrHighestOffset = wrHighestOffset;
	}
}
