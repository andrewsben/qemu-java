package org.anarres.qemu.qapi.api;

import com.google.gson.annotations.SerializedName;
import java.util.List;
import java.util.Map;
import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import org.anarres.qemu.qapi.common.*;

/**
 * Autogenerated class.
 *
 * <p><pre>QApiTypeDescriptor{name=BlockDeviceInfo, data={file=str, *node-name=str, ro=bool, drv=str, *backing_file=str, backing_file_depth=int, encrypted=bool, encryption_key_missing=bool, detect_zeroes=BlockdevDetectZeroesOptions, bps=int, bps_rd=int, bps_wr=int, iops=int, iops_rd=int, iops_wr=int, image=ImageInfo, *bps_max=int, *bps_rd_max=int, *bps_wr_max=int, *iops_max=int, *iops_rd_max=int, *iops_wr_max=int, *iops_size=int}, innerTypes=null}</pre></p>
 */
// QApiTypeDescriptor{name=BlockDeviceInfo, data={file=str, *node-name=str, ro=bool, drv=str, *backing_file=str, backing_file_depth=int, encrypted=bool, encryption_key_missing=bool, detect_zeroes=BlockdevDetectZeroesOptions, bps=int, bps_rd=int, bps_wr=int, iops=int, iops_rd=int, iops_wr=int, image=ImageInfo, *bps_max=int, *bps_rd_max=int, *bps_wr_max=int, *iops_max=int, *iops_rd_max=int, *iops_wr_max=int, *iops_size=int}, innerTypes=null}
public class BlockDeviceInfo extends QApiType {

	@SerializedName("file")
	@Nonnull
	public java.lang.String file;
	@SerializedName("node-name")
	@CheckForNull
	public java.lang.String nodeName;
	@SerializedName("ro")
	@Nonnull
	public boolean ro;
	@SerializedName("drv")
	@Nonnull
	public java.lang.String drv;
	@SerializedName("backing_file")
	@CheckForNull
	public java.lang.String backingFile;
	@SerializedName("backing_file_depth")
	@Nonnull
	public long backingFileDepth;
	@SerializedName("encrypted")
	@Nonnull
	public boolean encrypted;
	@SerializedName("encryption_key_missing")
	@Nonnull
	public boolean encryptionKeyMissing;
	@SerializedName("detect_zeroes")
	@Nonnull
	public BlockdevDetectZeroesOptions detectZeroes;
	@SerializedName("bps")
	@Nonnull
	public long bps;
	@SerializedName("bps_rd")
	@Nonnull
	public long bpsRd;
	@SerializedName("bps_wr")
	@Nonnull
	public long bpsWr;
	@SerializedName("iops")
	@Nonnull
	public long iops;
	@SerializedName("iops_rd")
	@Nonnull
	public long iopsRd;
	@SerializedName("iops_wr")
	@Nonnull
	public long iopsWr;
	@SerializedName("image")
	@Nonnull
	public ImageInfo image;
	@SerializedName("bps_max")
	@CheckForNull
	public long bpsMax;
	@SerializedName("bps_rd_max")
	@CheckForNull
	public long bpsRdMax;
	@SerializedName("bps_wr_max")
	@CheckForNull
	public long bpsWrMax;
	@SerializedName("iops_max")
	@CheckForNull
	public long iopsMax;
	@SerializedName("iops_rd_max")
	@CheckForNull
	public long iopsRdMax;
	@SerializedName("iops_wr_max")
	@CheckForNull
	public long iopsWrMax;
	@SerializedName("iops_size")
	@CheckForNull
	public long iopsSize;

	public BlockDeviceInfo() {
	}

	public BlockDeviceInfo(java.lang.String file, java.lang.String nodeName, boolean ro, java.lang.String drv, java.lang.String backingFile, long backingFileDepth, boolean encrypted, boolean encryptionKeyMissing, BlockdevDetectZeroesOptions detectZeroes, long bps, long bpsRd, long bpsWr, long iops, long iopsRd, long iopsWr, ImageInfo image, long bpsMax, long bpsRdMax, long bpsWrMax, long iopsMax, long iopsRdMax, long iopsWrMax, long iopsSize) {
		this.file = file;
		this.nodeName = nodeName;
		this.ro = ro;
		this.drv = drv;
		this.backingFile = backingFile;
		this.backingFileDepth = backingFileDepth;
		this.encrypted = encrypted;
		this.encryptionKeyMissing = encryptionKeyMissing;
		this.detectZeroes = detectZeroes;
		this.bps = bps;
		this.bpsRd = bpsRd;
		this.bpsWr = bpsWr;
		this.iops = iops;
		this.iopsRd = iopsRd;
		this.iopsWr = iopsWr;
		this.image = image;
		this.bpsMax = bpsMax;
		this.bpsRdMax = bpsRdMax;
		this.bpsWrMax = bpsWrMax;
		this.iopsMax = iopsMax;
		this.iopsRdMax = iopsRdMax;
		this.iopsWrMax = iopsWrMax;
		this.iopsSize = iopsSize;
	}
}
