package org.anarres.qemu.qapi.api;

import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import java.util.List;
import java.util.Map;
import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import org.anarres.qemu.qapi.common.*;

/**
 * Autogenerated class.
 *
 * <p><pre>QApiCommandDescriptor{name=drive-mirror, returns=null, data={device=str, target=str, *format=str, *node-name=str, *replaces=str, sync=MirrorSyncMode, *mode=NewImageMode, *speed=int, *granularity=uint32, *buf-size=int, *on-source-error=BlockdevOnError, *on-target-error=BlockdevOnError}}</pre></p>
 */
// QApiCommandDescriptor{name=drive-mirror, returns=null, data={device=str, target=str, *format=str, *node-name=str, *replaces=str, sync=MirrorSyncMode, *mode=NewImageMode, *speed=int, *granularity=uint32, *buf-size=int, *on-source-error=BlockdevOnError, *on-target-error=BlockdevOnError}}
public class DriveMirrorCommand extends QApiCommand<DriveMirrorCommand.Arguments, DriveMirrorCommand.Response> {
	/** Compound arguments to a DriveMirrorCommand. */
	public static class Arguments {

		@SerializedName("device")
		@Nonnull
		public java.lang.String device;
		@SerializedName("target")
		@Nonnull
		public java.lang.String target;
		@SerializedName("format")
		@CheckForNull
		public java.lang.String format;
		@SerializedName("node-name")
		@CheckForNull
		public java.lang.String nodeName;
		@SerializedName("replaces")
		@CheckForNull
		public java.lang.String replaces;
		@SerializedName("sync")
		@Nonnull
		public MirrorSyncMode sync;
		@SerializedName("mode")
		@CheckForNull
		public NewImageMode mode;
		@SerializedName("speed")
		@CheckForNull
		public long speed;
		@SerializedName("granularity")
		@CheckForNull
		public long granularity;
		@SerializedName("buf-size")
		@CheckForNull
		public long bufSize;
		@SerializedName("on-source-error")
		@CheckForNull
		public BlockdevOnError onSourceError;
		@SerializedName("on-target-error")
		@CheckForNull
		public BlockdevOnError onTargetError;

		public Arguments() {
		}

		public Arguments(java.lang.String device, java.lang.String target, java.lang.String format, java.lang.String nodeName, java.lang.String replaces, MirrorSyncMode sync, NewImageMode mode, long speed, long granularity, long bufSize, BlockdevOnError onSourceError, BlockdevOnError onTargetError) {
			this.device = device;
			this.target = target;
			this.format = format;
			this.nodeName = nodeName;
			this.replaces = replaces;
			this.sync = sync;
			this.mode = mode;
			this.speed = speed;
			this.granularity = granularity;
			this.bufSize = bufSize;
			this.onSourceError = onSourceError;
			this.onTargetError = onTargetError;
		}
	}

	/** Response to a DriveMirrorCommand. */
	public static class Response extends QApiResponse<java.lang.Void> {
	}

	/** Constructs a new DriveMirrorCommand. */
	public DriveMirrorCommand(@Nonnull DriveMirrorCommand.Arguments argument) {
		super("drive-mirror", Response.class, argument);
	}

	/** Constructs a new DriveMirrorCommand. */
	public DriveMirrorCommand(java.lang.String device, java.lang.String target, java.lang.String format, java.lang.String nodeName, java.lang.String replaces, MirrorSyncMode sync, NewImageMode mode, long speed, long granularity, long bufSize, BlockdevOnError onSourceError, BlockdevOnError onTargetError) {
		this(new Arguments(device, target, format, nodeName, replaces, sync, mode, speed, granularity, bufSize, onSourceError, onTargetError));
	}
}
