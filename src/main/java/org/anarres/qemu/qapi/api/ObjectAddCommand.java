package org.anarres.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonProperty;
import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import org.anarres.qemu.qapi.common.*;

/**
 * Autogenerated class.
 *
 * <p><pre>QApiCommandDescriptor{name=object-add, returns=null, data={qom-type=str, id=str, *props=dict}}</pre></p>
 */
// QApiCommandDescriptor{name=object-add, returns=null, data={qom-type=str, id=str, *props=dict}}
public class ObjectAddCommand extends QApiCommand<ObjectAddCommand.Arguments, ObjectAddCommand.Response> {
	/** Compound arguments to a ObjectAddCommand. */
	public static class Arguments {

		@JsonProperty("qom-type")
		@Nonnull
		public java.lang.String qomType;
		@JsonProperty("id")
		@Nonnull
		public java.lang.String id;
		@JsonProperty("props")
		@CheckForNull
		public java.util.Map<String, String> props;

		public Arguments() {
		}

		public Arguments(java.lang.String qomType, java.lang.String id, java.util.Map<String, String> props) {
			this.qomType = qomType;
			this.id = id;
			this.props = props;
		}
	}

	/** Response to a ObjectAddCommand. */
	public static class Response extends QApiResponse<java.lang.Void> {
	}

	/** Constructs a new ObjectAddCommand. */
	public ObjectAddCommand(@Nonnull ObjectAddCommand.Arguments argument) {
		super("object-add", Response.class, argument);
	}

	/** Constructs a new ObjectAddCommand. */
	public ObjectAddCommand(java.lang.String qomType, java.lang.String id, java.util.Map<String, String> props) {
		this(new Arguments(qomType, id, props));
	}
}
