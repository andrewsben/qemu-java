package org.anarres.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <p><pre>QApiEnumDescriptor{name=BlockdevDriver, data=[archipelago, blkdebug, blkverify, bochs, cloop, dmg, file, ftp, ftps, host_cdrom, host_device, host_floppy, http, https, null-aio, null-co, parallels, qcow, qcow2, qed, quorum, raw, tftp, vdi, vhdx, vmdk, vpc, vvfat], fields=null}</pre></p>
 */
// QApiEnumDescriptor{name=BlockdevDriver, data=[archipelago, blkdebug, blkverify, bochs, cloop, dmg, file, ftp, ftps, host_cdrom, host_device, host_floppy, http, https, null-aio, null-co, parallels, qcow, qcow2, qed, quorum, raw, tftp, vdi, vhdx, vmdk, vpc, vvfat], fields=null}
public enum BlockdevDriver {
	// @JsonProperty("archipelago")
	archipelago("archipelago"),
	// @JsonProperty("blkdebug")
	blkdebug("blkdebug"),
	// @JsonProperty("blkverify")
	blkverify("blkverify"),
	// @JsonProperty("bochs")
	bochs("bochs"),
	// @JsonProperty("cloop")
	cloop("cloop"),
	// @JsonProperty("dmg")
	dmg("dmg"),
	// @JsonProperty("file")
	file("file"),
	// @JsonProperty("ftp")
	ftp("ftp"),
	// @JsonProperty("ftps")
	ftps("ftps"),
	// @JsonProperty("host_cdrom")
	host_cdrom("host_cdrom"),
	// @JsonProperty("host_device")
	host_device("host_device"),
	// @JsonProperty("host_floppy")
	host_floppy("host_floppy"),
	// @JsonProperty("http")
	http("http"),
	// @JsonProperty("https")
	https("https"),
	// @JsonProperty("null-aio")
	null_aio("null-aio"),
	// @JsonProperty("null-co")
	null_co("null-co"),
	// @JsonProperty("parallels")
	parallels("parallels"),
	// @JsonProperty("qcow")
	qcow("qcow"),
	// @JsonProperty("qcow2")
	qcow2("qcow2"),
	// @JsonProperty("qed")
	qed("qed"),
	// @JsonProperty("quorum")
	quorum("quorum"),
	// @JsonProperty("raw")
	raw("raw"),
	// @JsonProperty("tftp")
	tftp("tftp"),
	// @JsonProperty("vdi")
	vdi("vdi"),
	// @JsonProperty("vhdx")
	vhdx("vhdx"),
	// @JsonProperty("vmdk")
	vmdk("vmdk"),
	// @JsonProperty("vpc")
	vpc("vpc"),
	// @JsonProperty("vvfat")
	vvfat("vvfat"),
	__UNKNOWN("<unknown>");

	private final java.lang.String jsonValue;

	/* pp */ BlockdevDriver(@Nonnull java.lang.String jsonValue) {
		this.jsonValue = jsonValue;
	}

	@JsonValue
	public java.lang.String getJsonValue() {
		return jsonValue;
	}
}
